// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserBase 登录成功返回的信息
// swagger:model UserBase
type UserBase struct {

	// 用户头像
	Avatar string `json:"avatar,omitempty"`

	// 生日(格式为:yyyy-MM-dd)
	BirthDay string `json:"birth_day,omitempty"`

	// 用户当前金币
	CurrentCoins int64 `json:"current_coins,omitempty"`

	// 用户当前积分
	CurrentPoints int64 `json:"current_points,omitempty"`

	// 用户ID
	// Required: true
	Euid *string `json:"euid"`

	// 好友数量
	FriendsCount int64 `json:"friends_count,omitempty"`

	// 性别
	Gender int64 `json:"gender,omitempty"`

	// 用户在应用内的等级
	Level int64 `json:"level,omitempty"`

	// 上一次登录日期
	LoginAt int64 `json:"login_at,omitempty"`

	// 用户昵称
	NickName string `json:"nick_name,omitempty"`

	// 用户手机号
	Phone string `json:"phone,omitempty"`

	// 注册日期
	RegisterAt int64 `json:"register_at,omitempty"`

	// 状态(0=正常 1=锁定)
	Status int64 `json:"status,omitempty"`

	// 标签
	Tags string `json:"tags,omitempty"`
}

// Validate validates this user base
func (m *UserBase) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEuid(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserBase) validateEuid(formats strfmt.Registry) error {

	if err := validate.Required("euid", "body", m.Euid); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserBase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserBase) UnmarshalBinary(b []byte) error {
	var res UserBase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
