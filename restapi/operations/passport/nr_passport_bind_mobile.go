// Code generated by go-swagger; DO NOT EDIT.

package passport

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrPassportBindMobileHandlerFunc turns a function with the right signature into a passport bind mobile handler
type NrPassportBindMobileHandlerFunc func(NrPassportBindMobileParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrPassportBindMobileHandlerFunc) Handle(params NrPassportBindMobileParams) middleware.Responder {
	return fn(params)
}

// NrPassportBindMobileHandler interface for that can handle valid passport bind mobile params
type NrPassportBindMobileHandler interface {
	Handle(NrPassportBindMobileParams) middleware.Responder
}

// NewNrPassportBindMobile creates a new http.Handler for the passport bind mobile operation
func NewNrPassportBindMobile(ctx *middleware.Context, handler NrPassportBindMobileHandler) *NrPassportBindMobile {
	return &NrPassportBindMobile{Context: ctx, Handler: handler}
}

/*NrPassportBindMobile swagger:route POST /passport/bindMobile Passport passportBindMobile

绑定手机号接口

绑定手机号接口

*/
type NrPassportBindMobile struct {
	Context *middleware.Context
	Handler NrPassportBindMobileHandler
}

func (o *NrPassportBindMobile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrPassportBindMobileParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
