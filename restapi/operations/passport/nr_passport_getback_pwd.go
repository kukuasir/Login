// Code generated by go-swagger; DO NOT EDIT.

package passport

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrPassportGetbackPwdHandlerFunc turns a function with the right signature into a passport getback pwd handler
type NrPassportGetbackPwdHandlerFunc func(NrPassportGetbackPwdParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrPassportGetbackPwdHandlerFunc) Handle(params NrPassportGetbackPwdParams) middleware.Responder {
	return fn(params)
}

// NrPassportGetbackPwdHandler interface for that can handle valid passport getback pwd params
type NrPassportGetbackPwdHandler interface {
	Handle(NrPassportGetbackPwdParams) middleware.Responder
}

// NewNrPassportGetbackPwd creates a new http.Handler for the passport getback pwd operation
func NewNrPassportGetbackPwd(ctx *middleware.Context, handler NrPassportGetbackPwdHandler) *NrPassportGetbackPwd {
	return &NrPassportGetbackPwd{Context: ctx, Handler: handler}
}

/*NrPassportGetbackPwd swagger:route POST /passport/getbackPwd Passport passportGetbackPwd

找回密码接口

找回密码接口

*/
type NrPassportGetbackPwd struct {
	Context *middleware.Context
	Handler NrPassportGetbackPwdHandler
}

func (o *NrPassportGetbackPwd) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrPassportGetbackPwdParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
